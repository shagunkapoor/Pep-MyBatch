package practice;

import java.util.LinkedList;

public class Practice {

	public static void main(String[] args) {
		String str="765028321";
		int n=5;
		
		String res=buildLowest(str, n);
		System.out.println(res);
	}
	
	
	private static String buildLowest(String str, int n){
		
		LinkedList<Character> queue=new LinkedList<>();
		String res="";
		
		int len=str.length();
		int k=len-n;  //remaining digits in o/p string
		
		int i;
		//selecting 1st digit from len-(k-1) digits
		for(i=0;i<=len-k;i++){
			
			insertInNonDecOrder(queue, str.charAt(i));
		}
		
		while(i<len){
			res+=queue.removeFirst();
			
			insertInNonDecOrder(queue, str.charAt(i));
			i++;
		}
		
		res+=queue.removeFirst(); // last elt in queue
		return res;
	}
	
	private static void insertInNonDecOrder(LinkedList<Character> queue, char ch){
		
		if(queue.isEmpty()){
			queue.addLast(ch);
		}else{
			
			while(queue.peek()>ch && !queue.isEmpty()){
				queue.removeFirst();
			}
			
			queue.addLast(ch);
		}
		
		return;
	}

}
